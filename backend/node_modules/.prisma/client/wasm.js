
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AuditlogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  entity: 'entity',
  entityId: 'entityId',
  before: 'before',
  after: 'after',
  createdAt: 'createdAt'
};

exports.Prisma.ClientScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  address: 'address',
  idNumber: 'idNumber',
  notes: 'notes'
};

exports.Prisma.ContactleadScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  message: 'message',
  source: 'source',
  createdAt: 'createdAt',
  propertyId: 'propertyId'
};

exports.Prisma.CoownershipScalarFieldEnum = {
  id: 'id',
  propertyId: 'propertyId',
  clientId: 'clientId',
  share: 'share',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.DealScalarFieldEnum = {
  id: 'id',
  type: 'type',
  status: 'status',
  basePrice: 'basePrice',
  discount: 'discount',
  taxRate: 'taxRate',
  commissionRate: 'commissionRate',
  expectedClose: 'expectedClose',
  closedAt: 'closedAt',
  createdAt: 'createdAt',
  propertyId: 'propertyId',
  clientId: 'clientId'
};

exports.Prisma.ExpenseScalarFieldEnum = {
  id: 'id',
  date: 'date',
  category: 'category',
  description: 'description',
  amount: 'amount',
  payee: 'payee',
  dealId: 'dealId',
  propertyId: 'propertyId'
};

exports.Prisma.InquiryScalarFieldEnum = {
  id: 'id',
  propertyId: 'propertyId',
  fullName: 'fullName',
  phone: 'phone',
  email: 'email',
  message: 'message',
  type: 'type',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  id: 'id',
  number: 'number',
  issueDate: 'issueDate',
  dueDate: 'dueDate',
  amount: 'amount',
  status: 'status',
  dealId: 'dealId'
};

exports.Prisma.PagecontentScalarFieldEnum = {
  id: 'id',
  page: 'page',
  section: 'section',
  key: 'key',
  value: 'value',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  date: 'date',
  amount: 'amount',
  method: 'method',
  reference: 'reference',
  dealId: 'dealId',
  invoiceId: 'invoiceId'
};

exports.Prisma.PaymentscheduleScalarFieldEnum = {
  id: 'id',
  dealId: 'dealId',
  label: 'label',
  dueDate: 'dueDate',
  amount: 'amount',
  status: 'status',
  paymentId: 'paymentId',
  createdAt: 'createdAt'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  description: 'description',
  coverImage: 'coverImage',
  status: 'status',
  location: 'location',
  category: 'category',
  surface: 'surface',
  units: 'units',
  startedAt: 'startedAt',
  deliveredAt: 'deliveredAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectmediaScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  kind: 'kind',
  url: 'url',
  alt: 'alt',
  order: 'order',
  createdAt: 'createdAt'
};

exports.Prisma.PropertyScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  description: 'description',
  price: 'price',
  location: 'location',
  category: 'category',
  bedrooms: 'bedrooms',
  bathrooms: 'bathrooms',
  area_m2: 'area_m2',
  surfaceHabitable: 'surfaceHabitable',
  type: 'type',
  yearOfConstruction: 'yearOfConstruction',
  capacity: 'capacity',
  status: 'status',
  mainImage: 'mainImage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PropertyimageScalarFieldEnum = {
  id: 'id',
  propertyId: 'propertyId',
  url: 'url',
  alt: 'alt',
  order: 'order',
  createdAt: 'createdAt'
};

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  title: 'title',
  description: 'description',
  content: 'content',
  icon: 'icon',
  slug: 'slug'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  isStaff: 'isStaff',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.CompanyinfoScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  category: 'category',
  label: 'label',
  order: 'order',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.auditlogOrderByRelevanceFieldEnum = {
  action: 'action',
  entity: 'entity'
};

exports.Prisma.clientOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  phone: 'phone',
  address: 'address',
  idNumber: 'idNumber',
  notes: 'notes'
};

exports.Prisma.contactleadOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  phone: 'phone',
  message: 'message',
  source: 'source'
};

exports.Prisma.coownershipOrderByRelevanceFieldEnum = {
  role: 'role'
};

exports.Prisma.dealOrderByRelevanceFieldEnum = {
  type: 'type',
  status: 'status'
};

exports.Prisma.expenseOrderByRelevanceFieldEnum = {
  category: 'category',
  description: 'description',
  payee: 'payee'
};

exports.Prisma.inquiryOrderByRelevanceFieldEnum = {
  fullName: 'fullName',
  phone: 'phone',
  email: 'email',
  message: 'message'
};

exports.Prisma.invoiceOrderByRelevanceFieldEnum = {
  number: 'number',
  status: 'status'
};

exports.Prisma.pagecontentOrderByRelevanceFieldEnum = {
  page: 'page',
  section: 'section',
  key: 'key'
};

exports.Prisma.paymentOrderByRelevanceFieldEnum = {
  method: 'method',
  reference: 'reference'
};

exports.Prisma.paymentscheduleOrderByRelevanceFieldEnum = {
  label: 'label',
  status: 'status'
};

exports.Prisma.projectOrderByRelevanceFieldEnum = {
  title: 'title',
  slug: 'slug',
  description: 'description',
  coverImage: 'coverImage',
  status: 'status',
  location: 'location',
  category: 'category'
};

exports.Prisma.projectmediaOrderByRelevanceFieldEnum = {
  kind: 'kind',
  url: 'url',
  alt: 'alt'
};

exports.Prisma.propertyOrderByRelevanceFieldEnum = {
  title: 'title',
  slug: 'slug',
  description: 'description',
  location: 'location',
  category: 'category',
  type: 'type',
  status: 'status',
  mainImage: 'mainImage'
};

exports.Prisma.propertyimageOrderByRelevanceFieldEnum = {
  url: 'url',
  alt: 'alt'
};

exports.Prisma.serviceOrderByRelevanceFieldEnum = {
  name: 'name',
  title: 'title',
  description: 'description',
  content: 'content',
  icon: 'icon',
  slug: 'slug'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  email: 'email',
  password: 'password',
  name: 'name',
  role: 'role'
};

exports.Prisma.companyinfoOrderByRelevanceFieldEnum = {
  key: 'key',
  value: 'value',
  category: 'category',
  label: 'label'
};
exports.inquiry_type = exports.$Enums.inquiry_type = {
  visit: 'visit',
  info: 'info'
};

exports.inquiry_status = exports.$Enums.inquiry_status = {
  new: 'new',
  contacted: 'contacted',
  closed: 'closed'
};

exports.Prisma.ModelName = {
  auditlog: 'auditlog',
  client: 'client',
  contactlead: 'contactlead',
  coownership: 'coownership',
  deal: 'deal',
  expense: 'expense',
  inquiry: 'inquiry',
  invoice: 'invoice',
  pagecontent: 'pagecontent',
  payment: 'payment',
  paymentschedule: 'paymentschedule',
  project: 'project',
  projectmedia: 'projectmedia',
  property: 'property',
  propertyimage: 'propertyimage',
  service: 'service',
  user: 'user',
  companyinfo: 'companyinfo'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\HP ELITEBOOK 850 G3\\Documents\\AGANI KAFEHIDJUMI ANGE EMMANUEL SYLVAIN\\realestate_3tier\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\HP ELITEBOOK 850 G3\\Documents\\AGANI KAFEHIDJUMI ANGE EMMANUEL SYLVAIN\\realestate_3tier\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel auditlog {\n  id        Int      @id @default(autoincrement())\n  userId    Int?\n  action    String   @db.VarChar(50)\n  entity    String   @db.VarChar(50)\n  entityId  Int?\n  before    Json?\n  after     Json?\n  createdAt DateTime @default(now())\n\n  @@index([userId], map: \"AuditLog_userId_fkey\")\n}\n\nmodel client {\n  id       Int     @id @default(autoincrement())\n  name     String  @db.VarChar(150)\n  email    String? @db.VarChar(100)\n  phone    String? @db.VarChar(30)\n  address  String? @db.Text\n  idNumber String? @db.VarChar(50)\n  notes    String? @db.Text\n\n  // Relations\n  deals        deal[]\n  coOwnerships coownership[]\n}\n\nmodel contactlead {\n  id         Int      @id @default(autoincrement())\n  name       String   @db.VarChar(100)\n  email      String?  @db.VarChar(100)\n  phone      String?  @db.VarChar(30)\n  message    String   @db.Text\n  source     String   @default(\"Formulaire site\") @db.VarChar(100)\n  createdAt  DateTime @default(now())\n  propertyId Int?\n\n  property property? @relation(fields: [propertyId], references: [id], onDelete: SetNull)\n\n  @@index([propertyId], map: \"ContactLead_propertyId_fkey\")\n}\n\nmodel coownership {\n  id         Int      @id @default(autoincrement())\n  propertyId Int\n  clientId   Int\n  share      Decimal  @default(0.00) @db.Decimal(5, 2)\n  role       String   @default(\"coowner\") @db.VarChar(30)\n  createdAt  DateTime @default(now())\n\n  property property @relation(fields: [propertyId], references: [id], onDelete: Cascade)\n  client   client   @relation(fields: [clientId], references: [id], onDelete: Cascade)\n\n  @@unique([propertyId, clientId], map: \"CoOwnership_propertyId_clientId_key\")\n  @@index([clientId], map: \"CoOwnership_clientId_fkey\")\n}\n\nmodel deal {\n  id             Int       @id @default(autoincrement())\n  type           String    @default(\"sale\") @db.VarChar(20)\n  status         String    @default(\"draft\") @db.VarChar(30)\n  basePrice      Decimal   @default(0.00) @db.Decimal(14, 2)\n  discount       Decimal   @default(0.00) @db.Decimal(14, 2)\n  taxRate        Decimal   @default(0.00) @db.Decimal(5, 2)\n  commissionRate Decimal   @default(0.00) @db.Decimal(5, 2)\n  expectedClose  DateTime?\n  closedAt       DateTime?\n  createdAt      DateTime  @default(now())\n  propertyId     Int?\n  clientId       Int\n\n  // Relations\n  client    client            @relation(fields: [clientId], references: [id], onDelete: Cascade)\n  property  property?         @relation(fields: [propertyId], references: [id], onDelete: SetNull)\n  invoices  invoice[]\n  payments  payment[]\n  schedules paymentschedule[]\n  expenses  expense[]\n\n  @@index([clientId], map: \"Deal_clientId_fkey\")\n  @@index([propertyId], map: \"Deal_propertyId_fkey\")\n}\n\nmodel expense {\n  id          Int      @id @default(autoincrement())\n  date        DateTime @default(now())\n  category    String   @db.VarChar(50)\n  description String?  @db.Text\n  amount      Decimal  @db.Decimal(14, 2)\n  payee       String?  @db.VarChar(100)\n  dealId      Int?\n  propertyId  Int?\n\n  deal     deal?     @relation(fields: [dealId], references: [id], onDelete: SetNull)\n  property property? @relation(fields: [propertyId], references: [id], onDelete: SetNull)\n\n  @@index([dealId], map: \"Expense_dealId_fkey\")\n  @@index([propertyId], map: \"Expense_propertyId_fkey\")\n}\n\nmodel inquiry {\n  id         Int            @id @default(autoincrement())\n  propertyId Int\n  fullName   String         @db.VarChar(100)\n  phone      String?        @db.VarChar(30)\n  email      String?        @db.VarChar(100)\n  message    String?        @db.Text\n  type       inquiry_type   @default(info)\n  status     inquiry_status @default(new)\n  createdAt  DateTime       @default(now())\n\n  property property @relation(fields: [propertyId], references: [id], onDelete: Cascade)\n\n  @@index([propertyId], map: \"Inquiry_propertyId_fkey\")\n}\n\nmodel invoice {\n  id        Int       @id @default(autoincrement())\n  number    String    @unique(map: \"Invoice_number_key\") @db.VarChar(50)\n  issueDate DateTime  @default(now())\n  dueDate   DateTime?\n  amount    Decimal   @db.Decimal(14, 2)\n  status    String    @default(\"open\") @db.VarChar(20)\n  dealId    Int\n\n  deal     deal      @relation(fields: [dealId], references: [id], onDelete: Cascade)\n  payments payment[]\n\n  @@index([dealId], map: \"Invoice_dealId_fkey\")\n}\n\nmodel pagecontent {\n  id        Int      @id @default(autoincrement())\n  page      String   @db.VarChar(50)\n  section   String   @db.VarChar(50)\n  key       String   @db.VarChar(50)\n  value     Json\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([page, section, key], map: \"PageContent_page_section_key_key\")\n}\n\nmodel payment {\n  id        Int      @id @default(autoincrement())\n  date      DateTime @default(now())\n  amount    Decimal  @db.Decimal(14, 2)\n  method    String   @default(\"cash\") @db.VarChar(30)\n  reference String?  @db.VarChar(100)\n  dealId    Int\n  invoiceId Int?\n\n  deal      deal              @relation(fields: [dealId], references: [id], onDelete: Cascade)\n  invoice   invoice?          @relation(fields: [invoiceId], references: [id], onDelete: SetNull)\n  schedules paymentschedule[]\n\n  @@index([dealId], map: \"Payment_dealId_fkey\")\n  @@index([invoiceId], map: \"Payment_invoiceId_fkey\")\n}\n\nmodel paymentschedule {\n  id        Int      @id @default(autoincrement())\n  dealId    Int\n  label     String   @db.VarChar(100)\n  dueDate   DateTime\n  amount    Decimal  @db.Decimal(14, 2)\n  status    String   @default(\"pending\") @db.VarChar(20)\n  paymentId Int?\n  createdAt DateTime @default(now())\n\n  deal    deal     @relation(fields: [dealId], references: [id], onDelete: Cascade)\n  payment payment? @relation(fields: [paymentId], references: [id], onDelete: SetNull)\n\n  @@index([dealId], map: \"PaymentSchedule_dealId_fkey\")\n  @@index([paymentId], map: \"PaymentSchedule_paymentId_fkey\")\n}\n\nmodel project {\n  id          Int       @id @default(autoincrement())\n  title       String    @db.VarChar(200)\n  slug        String    @unique(map: \"Project_slug_key\") @db.VarChar(100)\n  description String?   @db.Text\n  coverImage  String?   @db.VarChar(255)\n  status      String?   @db.VarChar(20)\n  location    String?   @db.VarChar(150)\n  category    String?   @db.VarChar(50)\n  surface     Decimal?  @db.Decimal(12, 2)\n  units       Int?\n  startedAt   DateTime?\n  deliveredAt DateTime?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  medias projectmedia[]\n}\n\nmodel projectmedia {\n  id        Int      @id @default(autoincrement())\n  projectId Int\n  kind      String   @default(\"image\") @db.VarChar(20)\n  url       String   @db.VarChar(255)\n  alt       String?  @db.VarChar(200)\n  order     Int      @default(0)\n  createdAt DateTime @default(now())\n\n  project project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n\n  @@index([projectId], map: \"ProjectMedia_projectId_fkey\")\n}\n\nmodel property {\n  id                 Int      @id @default(autoincrement())\n  title              String\n  slug               String   @unique(map: \"Property_slug_key\")\n  description        String?  @db.Text\n  price              Decimal? @db.Decimal(15, 2)\n  location           String?\n  category           String?  @db.VarChar(50)\n  bedrooms           Int?\n  bathrooms          Int?\n  area_m2            Decimal? @db.Decimal(10, 2)\n  surfaceHabitable   Int?\n  type               String?  @db.VarChar(50)\n  yearOfConstruction Int?\n  capacity           Int?\n  status             String?\n  mainImage          String?\n  createdAt          DateTime @default(now())\n  updatedAt          DateTime @updatedAt\n\n  images       propertyimage[]\n  deals        deal[]\n  expenses     expense[]\n  inquiries    inquiry[]\n  contactLeads contactlead[]\n  coOwnerships coownership[]\n}\n\nmodel propertyimage {\n  id         Int      @id @default(autoincrement())\n  propertyId Int\n  url        String\n  alt        String?\n  order      Int      @default(0)\n  createdAt  DateTime @default(now())\n\n  property property @relation(fields: [propertyId], references: [id], onDelete: Cascade)\n\n  @@index([propertyId], map: \"PropertyImage_propertyId_fkey\")\n}\n\nmodel service {\n  id          Int     @id @default(autoincrement())\n  name        String  @db.VarChar(100)\n  title       String? @db.VarChar(150)\n  description String? @db.Text\n  content     String? @db.Text\n  icon        String? @db.VarChar(50)\n  slug        String? @db.VarChar(100)\n}\n\nmodel user {\n  id        Int      @id @default(autoincrement())\n  email     String   @unique(map: \"User_email_key\") @db.VarChar(100)\n  password  String   @db.VarChar(255)\n  name      String?  @db.VarChar(100)\n  isStaff   Boolean  @default(true)\n  role      String   @default(\"admin\") @db.VarChar(20)\n  createdAt DateTime @default(now())\n}\n\nmodel companyinfo {\n  id        Int      @id @default(autoincrement())\n  key       String   @unique @db.VarChar(50)\n  value     String   @db.Text\n  category  String   @default(\"contact\") @db.VarChar(50)\n  label     String?  @db.VarChar(100)\n  order     Int      @default(0)\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nenum inquiry_type {\n  visit\n  info\n}\n\nenum inquiry_status {\n  new\n  contacted\n  closed\n}\n",
  "inlineSchemaHash": "f696de7a50aa89d629c5f9e2616c9696a9dc7cda27041725c5298f21b504b3c0",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"auditlog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"before\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"after\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"client\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deals\",\"kind\":\"object\",\"type\":\"deal\",\"relationName\":\"clientTodeal\"},{\"name\":\"coOwnerships\",\"kind\":\"object\",\"type\":\"coownership\",\"relationName\":\"clientTocoownership\"}],\"dbName\":null},\"contactlead\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"property\",\"relationName\":\"contactleadToproperty\"}],\"dbName\":null},\"coownership\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"share\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"property\",\"relationName\":\"coownershipToproperty\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"client\",\"relationName\":\"clientTocoownership\"}],\"dbName\":null},\"deal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"basePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"taxRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"commissionRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"expectedClose\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"closedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"client\",\"relationName\":\"clientTodeal\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"property\",\"relationName\":\"dealToproperty\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"invoice\",\"relationName\":\"dealToinvoice\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"payment\",\"relationName\":\"dealTopayment\"},{\"name\":\"schedules\",\"kind\":\"object\",\"type\":\"paymentschedule\",\"relationName\":\"dealTopaymentschedule\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"expense\",\"relationName\":\"dealToexpense\"}],\"dbName\":null},\"expense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"payee\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"deal\",\"relationName\":\"dealToexpense\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"property\",\"relationName\":\"expenseToproperty\"}],\"dbName\":null},\"inquiry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"inquiry_type\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"inquiry_status\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"property\",\"relationName\":\"inquiryToproperty\"}],\"dbName\":null},\"invoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"deal\",\"relationName\":\"dealToinvoice\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"payment\",\"relationName\":\"invoiceTopayment\"}],\"dbName\":null},\"pagecontent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"page\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"section\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"invoiceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"deal\",\"relationName\":\"dealTopayment\"},{\"name\":\"invoice\",\"kind\":\"object\",\"type\":\"invoice\",\"relationName\":\"invoiceTopayment\"},{\"name\":\"schedules\",\"kind\":\"object\",\"type\":\"paymentschedule\",\"relationName\":\"paymentTopaymentschedule\"}],\"dbName\":null},\"paymentschedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"deal\",\"relationName\":\"dealTopaymentschedule\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"payment\",\"relationName\":\"paymentTopaymentschedule\"}],\"dbName\":null},\"project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coverImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"surface\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"units\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"medias\",\"kind\":\"object\",\"type\":\"projectmedia\",\"relationName\":\"projectToprojectmedia\"}],\"dbName\":null},\"projectmedia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"kind\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"alt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"project\",\"relationName\":\"projectToprojectmedia\"}],\"dbName\":null},\"property\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bedrooms\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bathrooms\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"area_m2\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"surfaceHabitable\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yearOfConstruction\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mainImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"propertyimage\",\"relationName\":\"propertyTopropertyimage\"},{\"name\":\"deals\",\"kind\":\"object\",\"type\":\"deal\",\"relationName\":\"dealToproperty\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"expense\",\"relationName\":\"expenseToproperty\"},{\"name\":\"inquiries\",\"kind\":\"object\",\"type\":\"inquiry\",\"relationName\":\"inquiryToproperty\"},{\"name\":\"contactLeads\",\"kind\":\"object\",\"type\":\"contactlead\",\"relationName\":\"contactleadToproperty\"},{\"name\":\"coOwnerships\",\"kind\":\"object\",\"type\":\"coownership\",\"relationName\":\"coownershipToproperty\"}],\"dbName\":null},\"propertyimage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"alt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"property\",\"relationName\":\"propertyTopropertyimage\"}],\"dbName\":null},\"service\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"user\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isStaff\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"companyinfo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

